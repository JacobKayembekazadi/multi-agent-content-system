databases:
  - name: db
    plan: free
    databaseName: content_marketing
    user: user

services:
  - type: redis
    name: redis
    plan: free
    ipAllowList: []

  - type: web
    name: backend
    runtime: docker
    dockerfilePath: ./backend/Dockerfile
    dockerContext: .
    startCommand: "mkdir -p /app/credentials && echo $GOOGLE_CREDENTIALS_JSON > /app/credentials/google-credentials.json && uvicorn api_backend:app --host 0.0.0.0 --port 8000"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: GOOGLE_CLIENT_ID
        sync: false  # Set this in Render dashboard
      - key: GOOGLE_CLIENT_SECRET
        sync: false  # Set this in Render dashboard - NEVER hardcode!
      - key: GOOGLE_API_KEY
        sync: false  # Set this in Render dashboard - NEVER hardcode!
      - key: ZAPIER_API_KEY
        sync: false  # Set this in Render dashboard - NEVER hardcode!
      - key: SECRET_KEY
        generateValue: true
      - key: GOOGLE_REDIRECT_URI
        sync: false  # Update with your actual frontend URL
      - key: GOOGLE_APPLICATION_CREDENTIALS
        value: /app/credentials/google-credentials.json
      - key: GOOGLE_CREDENTIALS_JSON
        sync: false  # Set this in Render dashboard with real service account JSON
      - key: DEBUG
        value: "false"
      - key: LOG_LEVEL
        value: "INFO"

  - type: web
    name: frontend
    runtime: docker
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: .
    envVars:
      - key: REACT_APP_API_URL
        fromService:
          type: web
          name: backend
          property: url
      - key: REACT_APP_WS_URL
        fromService:
          type: web
          name: backend
          property: url
